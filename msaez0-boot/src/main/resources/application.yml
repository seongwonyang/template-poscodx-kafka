forEach: BoundedContext
path: {{nameCamelCase}}/{{nameCamelCase}}-boot/src/main/resources
fileName: application.yml
---
server:
  servlet:
    context-path: /{{nameCamelCase}}-kafka
spring:
  datasource:
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
    driver-class-name: ${datasource.driver-class-name}
    hikari:
      maximum-pool-size: ${datasource.hikari.maximum-pool-size}
      minimum-idle: ${datasource.hikari.minimum-idle}
  mvc:
    converters:
      preferred-json-mapper: gson
  cloud:
    stream:
      default:
        group: ${spring.application.name}
      kafka:
        binder:
          brokers: ${kafka.brokers}
          zkNodes: ${kafka.zkNodes}
        default:
          consumer:
            ackMode: RECORD
      function:
        definition: {{#aggregates}}{{#events}}{{nameCamelCase}}{{^last}}, {{/last}}{{/events}}{{/aggregates}}, {{#policies}}{{#incomingEventRefs}}{{nameCamelCase}}{{^last}}, {{/last}}{{/incomingEventRefs}}{{/policies}}
      bindings:
        default:
          consumer:
            enableDlq: true
            maxAttempts: 2147483647
        {{#aggregates}}{{#events}}
        {{nameCamelCase}}-out-0:
          destination: {{nameCamelCase}}
          consumer:
            maxAttempts: 1
        {{/events}}{{/aggregates}}
        {{#policies}}{{#incomingEventRefs}}
        {{nameCamelCase}}-in-0:
          destination: {{nameCamelCase}}
          consumer:
            maxAttempts: 1
        {{/incomingEventRefs}}{{/policies}}
poscoict:
  reuse:
    offset-n-skip:
      jdbcUrl: ${reuse.datasource.url}
      username: ${reuse.datasource.username}
      password: ${reuse.datasource.password}
      driverClassName: ${datasource.driver-class-name}
      hikari:
        maximum-pool-size: ${datasource.hikari.maximum-pool-size}
        minimum-idle: ${datasource.hikari.minimum-idle}
